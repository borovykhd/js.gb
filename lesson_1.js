/* Задание1.
Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в градусах по Фаренгейту. Подсказка: расчёт идёт по формуле: Tf = (9 / 5) * Tc + 32, где Tf – температура по Фаренгейту, Tc – температура по Цельсию*/

var Tc = parseInt(prompt('Введите температуру в цельсиях'));
var Tf = (9/5) * Tc + 32;
alert(Tc + ' градусов по цельсию равно ' + Tf + ' по Фаренгейту');
console.log(Tc + ' градусов по цельсию равно ' + Tf + ' по Фаренгейту');

/* Задание 2. 
Объявить две переменные: admin и name. Записать в name строку "Василий"; Скопировать значение из name в admin. Вывести admin (должно вывестись «Василий»).*/

var admin, name = "Василий";
alert(admin=name);
console.log(admin=name);

/* Задание 3. 
Чему будет равно JS-выражение 1000 + "108"? */
alert('Ответом конкатенации 1000 + "108" будет ' + (1000 + "108") + ' тип данных ' + typeof(1000 + "108"));
console.log('Ответом конкатенации 1000 + "108" будет ' + (1000 + "108") + ' тип данных ' + typeof(1000 + "108"));
//Ответ 1000108
//Если в уравнение есть хоть одна строка будет выполнятся склеивание

/* Задание 4. 
Самостоятельно разобраться с атрибутами тега script (async и defer). 

- Специальные атрибуты async и defer используются для того, чтобы пока грузится внешний скрипт – браузер показал остальную (следующую за ним) часть страницы. *Атрибуты async/defer работают только в том случае, если назначены на внешние скрипты, т.е. имеющие src.


Атрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт в фоновом режиме, а затем запустить этот скрипт, когда он загрузится

Атрибут async означает, что скрипт абсолютно независим:
Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.

Разница между async и defer: атрибут defer сохраняет относительную последовательность скриптов, а async – нет. Кроме того, defer всегда ждёт, пока весь HTML-документ будет готов, а async – нет.

*/
